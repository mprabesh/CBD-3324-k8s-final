{{- if .Values.redis.enabled -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.redis.name }}
  namespace: {{ .Values.namespaces.cache }}
  labels:
    app.kubernetes.io/name: blog-app
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: redis
  annotations:
    project.maintainer: "{{ .Values.global.maintainer }}"
spec:
  replicas: {{ .Values.redis.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: blog-app
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: blog-app
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: redis
    spec:
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.redis.service.targetPort }}
              name: redis
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
{{- end -}}
