apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.name }}-deployment
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "blog-backend.labels" . | nindent 4 }}
    component: backend
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      {{- include "blog-backend.selectorLabels" . | nindent 6 }}
      component: backend
  template:
    metadata:
      labels:
        {{- include "blog-backend.selectorLabels" . | nindent 8 }}
        component: backend
        version: {{ .Values.backend.image.tag | quote }}
    spec:
      containers:
        - name: {{ .Values.backend.name }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.backend.service.targetPort }}
              protocol: TCP
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.backend.name }}-config
                  key: NODE_ENV
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.backend.name }}-config
                  key: PORT
            - name: MONGO_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.name }}-secrets
                  key: MONGO_USERNAME
            - name: MONGO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.name }}-secrets
                  key: MONGO_PASSWORD
            - name: MONGO_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.backend.name }}-config
                  key: MONGO_HOST
            - name: MONGO_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.backend.name }}-config
                  key: MONGO_PORT
            - name: MONGO_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.backend.name }}-config
                  key: MONGO_DB
            - name: DB_URL
              value: "mongodb://$(MONGO_USERNAME):$(MONGO_PASSWORD)@$(MONGO_HOST):$(MONGO_PORT)/$(MONGO_DB)"
            - name: REDIS_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.backend.name }}-config
                  key: REDIS_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.name }}-secrets
                  key: JWT_SECRET
          {{- if .Values.healthCheck.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.healthCheck.readinessProbe.httpGet.path }}
              port: {{ .Values.healthCheck.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.healthCheck.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.readinessProbe.periodSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthCheck.livenessProbe.httpGet.path }}
              port: {{ .Values.healthCheck.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.healthCheck.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.livenessProbe.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
